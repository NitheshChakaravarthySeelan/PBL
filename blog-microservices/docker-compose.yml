version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - blog-network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093" # For external access if needed
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - blog-network

  kafka-topics-creator:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka-topics-creator
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              cub kafka-ready -b kafka:9092 1 20 && \
              kafka-topics --create --if-not-exists --topic post-events --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 && \
              kafka-topics --create --if-not-exists --topic user-events --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1'"
    depends_on:
      - kafka
    networks:
      - blog-network

  eureka-server:
    build: ./service-registry
    ports:
      - "8761:8761"
    networks:
      - blog-network

  config-server:
    build: ./config-server
    ports:
      - "8888:8888"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
    networks:
      - blog-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "8088:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    depends_on:
      - eureka-server
      - config-server
    networks:
      - blog-network

  users-service:
    build: ./users-service
    ports:
      - "8081:8081"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    depends_on:
      - eureka-server
      - config-server
      - postgres-users
      - kafka # Add kafka dependency
    networks:
      - blog-network

  posts-service:
    build: ./posts-service
    ports:
      - "8082:8082"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    depends_on:
      - eureka-server
      - config-server
      - postgres-posts
      - kafka # Add kafka dependency
    networks:
      - blog-network

  postgres-users:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: usersdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    networks:
      - blog-network

  postgres-posts:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: postsdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432" # Map to a different host port to avoid conflict
    networks:
      - blog-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - blog-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - blog-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4317:4317"  # OTLP gRPC port
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge
